name: Build and Release Go Proxy

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: windows
            arch: amd64
          - os: darwin
            arch: amd64  # macOS Intel
          - os: darwin
            arch: arm64  # macOS M1

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23.0'

    - name: Build binary
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o revp-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
      working-directory: ${{ github.workspace }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: revp-${{ matrix.os }}-${{ matrix.arch }}
        path: revp-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for filename in revp-*; do
            echo "Uploading $filename"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: application/octet-stream" \
                 -T ${filename} \
                 "${{ steps.create_release.outputs.upload_url }}?name=$(basename ${filename})"
          done